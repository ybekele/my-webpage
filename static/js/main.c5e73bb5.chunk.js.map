{"version":3,"sources":["components/Homepage.jsx","components/About.jsx","components/Portfolio.jsx","components/Resume.jsx","components/CustomNavbar.jsx","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["particleOpt","particles","number","value","density","enable","value_area","Homepage","className","Container","Jumbotron","to","Button","Row","Col","xs","sm","params","Component","About","Portfolio","width","height","src","frameBorder","allow","allowFullScreen","title","frameborder","allowfullscreen","CustomNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.c5e73bb5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'; \nimport {Jumbotron, Col, Container, Row, Button} from 'react-bootstrap';\nimport Particles from 'react-particles-js';\nimport './Homepage.css'\n\n// Particle resource : https://www.youtube.com/watch?v=MD5Uy0GJA7U&t=\nconst particleOpt = {\n    particles: {\n        number: {\n            value: 150, \n            density: {\n                enable: true, \n                value_area: 800\n            }\n        }\n    }\n}\nexport default class Homepage extends Component {\n    render() {\n        return (\n            <div> \n                <div className=\"aboutText\"> \n                <Container>\n                \n                    <Jumbotron className=\"jumbo\">\n                        <h2> Yonael Bekele </h2>\n                        <p> Student & Research Assistant at the University of Alberta </p>\n                        <Link to=\"/about\">\n                         {/* TODO: Add styling to button later */}\n                        <Button className=\"btn1\"> About</Button>\n                        <Button className=\"spacer\"></Button>\n                    </Link>\n                        <Link to=\"/portfolio\">\n                            {/* TODO: Add styling to button later */}\n                            <Button className=\"btn2\"> Portfolio</Button>\n                            <Button className=\"spacer\"></Button>\n                        </Link>\n       \n                        \n                    </Jumbotron>\n                    <Row className=\"show-grid text-center\">\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                            {/* <Image src=\"assets/headshot.jpg\" circle className=\"profile-pic\" /> */}\n                        </Col>\n                    </Row>\n                    \n                </Container>\n                </div>\n            <div className=\"Background\"> \n                <Particles \n                    params={particleOpt} />\n                    </div>\n                \n            </div>\n        )\n    }\n}\n\n\n\n","import React, { Component } from 'react'\nimport {Jumbotron} from 'react-bootstrap'; \n\nexport default class About extends Component {\n    render() {\n        return (\n            <div>\n                <Jumbotron className=\"jumbo\">\n                    <h2>About Me</h2>\n                <p1> Welcome to my website! I'm expecting to finish my BsC in Computing Science at the University of Alberta in December. \n                    I'm interested in Natural Language Processing & Web Development. I'm hoping to relocate and discover something new and take a step forward in my career as a software developer. \n                    </p1>\n                \n                <p1>\n                    Currently, I work as a Research Assistant at the University of Alberta, primarily working on the development of a Chatbot to aid parents of children with neurodevelopment disorders and other challenges that they may seek online aids from. \n                    We hope that this project can help these individuals avoid harmful advice on the internet, and receive professional resources of a high standard, similar to an experts recommendation.  \n                </p1>\n                </Jumbotron>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Jumbotron, Container, Row, Col} from 'react-bootstrap';\n\n\nexport default class Portfolio extends Component {\n    render() {\n        return (\n            <Container>\n                \n                \n                    <Jumbotron>\n                        <h2> Portfolio </h2>\n                        <p> A collection of some of the cool projects I've been apart of! </p>\n                        \n                    </Jumbotron>\n                    <Row className=\"show-grid text-center\">\n                    <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <Jumbotron>\n                        <h5> Online Video Interview System </h5>\n                        <p> The Online Video Interview System is a web application that will allow video interviews to be conducted by the University of Alberta for potential Graduate Students. Each interview is a unique experience tailored to each user based on their applications.</p>\n                        \n                        </Jumbotron>\n                        </Col>\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <iframe width=\"100%\" height=\"90%\" src='https://www.youtube.com/embed/0QQqfyDGqRA'\n                            frameBorder='0'\n                            allow='autoplay; encrypted-media'\n                            allowFullScreen\n                            title='video'\n                        />\n                        </Col>\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <Jumbotron>\n                        <h5> Tools & Contributions </h5>\n                        <p> Front End: Javascript, CSS, Bootstrap Framework</p>\n                        <p> Back End: Django & Python </p>\n                        <p> Deployed on a Cybera server, used the Natural Language Processing tools NLTK & spaCy  </p>\n                        <p> My main contributions on this project were on the backend and the algorithms that use NLP tools to give a unique interview.  </p>\n                        <p> I was 1 of 2 people from the team hired to continue further development so I got to be familiar with both the Front-End and Back-End</p>\n                        \n                        </Jumbotron>\n                        </Col>\n\n\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <Jumbotron>\n                        <h5> FriendZone </h5>\n                        <p> Friendzone is a social web app that allows you to connect to other authors in similarly set up social websites. </p>\n                        \n                        </Jumbotron>\n                        </Col>\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <iframe width=\"100%\" height=\"90%\" src='https://www.youtube.com/embed/Coq5Z20sqmc'\n                            frameBorder='0'\n                            allow='autoplay; encrypted-media'\n                            allowFullScreen\n                            title='video'\n                        />\n                        </Col>\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <Jumbotron>\n                        <h5> Tools & Contributions </h5>\n                        <p> Front End: React JS </p>\n                        <p> Back End: Django & Python </p>\n                        <p> Deployed on Heroku Cloud Application platform</p>\n                        <p> My main focus was on the passing of data between the back end and the front end. This was my first time using React, and I learned a lot about React, Django API and connecting the two together  </p>\n                        \n                        </Jumbotron>\n                        </Col>\n\n\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <Jumbotron>\n                        <h5> HabiTrack </h5>\n                        <p> HabiTrack is an Android app that allows users to track their habits in cool & innovative ways! </p>\n                        \n                        </Jumbotron>\n                        </Col>\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <iframe width=\"100%\" height=\"90%\" src=\"https://www.youtube.com/embed/iRYMjlrQxK0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                        </Col>\n                        <Col xs={12} sm={4} className=\"person-wrapper\">\n                        <Jumbotron>\n                        <h5> Tools & Contributions </h5>\n                        <p>Java using Android Studio, Elastic Search and Google APIs</p>\n                        <p> My main role in this project was integrating Front End/Design, Social Features, Twitter API, Unit Testing </p>\n                        \n                        </Jumbotron>\n                        </Col>\n                        \n                    </Row>\n                   \n                    \n                </Container>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Document, Page } from \"react-pdf\";\nimport './Resume.css'\n\nexport default class Resume extends Component {\n    \n    // onDocumentLoadSuccess = ({ numPages }) => {\n    //     this.setState({ numPages });\n    //   };\n    \n    render() {\n        return (\n            <h1> My Resume</h1>\n            \n        \n\n        \n        \n     \n        )\n    }\n}","import React, { Component } from 'react'\nimport {Navbar, Nav} from \"react-bootstrap\"; \nimport {Link} from \"react-router-dom\";\n\nexport default class CustomNavbar extends Component {\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Portfolio Site</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    \n                        <Nav.Link><Link to={\"/about\"}>About</Link></Nav.Link>\n                        <Nav.Link><Link to={\"/portfolio\"}>Portfolio</Link></Nav.Link>\n                        \n    \n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n    \n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Homepage from './components/Homepage';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Resume from './components/Resume';\nimport CustomNavbar from './components/CustomNavbar'\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <CustomNavbar/>\n        \n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n        {/* <Route path=\"/resume\" component={Resume} /> */}\n       \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 37;"],"sourceRoot":""}